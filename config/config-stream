######### mandatory config:
# task operation available: "batch" (pre-training of stream), "smatch", "experiment"
task:smatch
# mandatory for stream match with pre-trained models
graph_file:pipeline/graph/fodors_zagats.graphml
embeddings_file:pipeline/embeddings/fodors_zagats.emb

######## optional config #########
output_file_name:fodors_zagats-001
########## log config:
log_path:pipeline/logging

########## graph config:
# "tn": token as number, "tt": token as text, "idx": id of row, "cid": id of column
# "$": string, "#": number
# (1-7): class of this type of value, definition of different classes is written at file README
node_types:["7#__tn", "7$__tt", "3$__idx", "1$__cid"]
# graph construction algorithm will split all nodes with a prefix listed here
flatten:tt
# smooth method: log/no
smoothing_method:no
directed:false

########### walks config:
write_walks:true
# step size
walk_length:60
# number of sentences generated from a root node
walks_number:20
# whether it is possible to return to the previous node
backtrack:false
# statistical overview/vis for random walk
rw_stat:true

########## Embeddings configuration:
learning_method:skipgram
window_size:3
n_dimensions:300
# choices for training algo : word2vec, fasttext
training_algorithm:word2vec

########### similarity list config:
top_k:10
simlist_n:10
simlist_show:5
# strategy to calculate similarity: "basic" or "faiss"
strategy_suppl:faiss
# output format for silimarity list : {db, json, parquet}
output_format:db
source_num:1362

########## kafka config:
kafka_topicid:entity_resolution_process
kafka_groupid:er_group
bootstrap_servers:localhost
port:9092
# strategy for sliding windows: "count" for count-based, "time" for time-based
window_strategy:count
window_count:136
# time interval to execute entity resolution task (s) 
window_time:3
# stride for sliding windows or update interval of time (s), 0 --> tumbling windows
update_frequency:0
